{"version":3,"sources":["components/UserCard.js","components/Repos.js","context/Usercontext.js","pages/Home.js","pages/Signin.js","pages/Signup.js","pages/PageNotFound.js","layouts/Footer.js","layouts/Header.js","App.js","config/firebaseconfig.js","serviceWorker.js","index.js"],"names":["UserCard","user","Card","className","src","avatar_url","alt","login","CardBody","name","location","bio","hireable","followers","blog","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signup","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","Provider","exact","path","component","Signin","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d08e5353.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, CardBody} from \"reactstrap\"\r\n\r\nconst UserCard = ({user}) => {\r\n    return (\r\n        <Card className='text-center mt-3 mb-4'>\r\n            <img src={user.avatar_url} alt={user.login} className='img-thumnail'/>\r\n            <CardBody>\r\n                <div className=\"text-primary\">{user.name}</div>\r\n                <div className=\"text-primary\">{user.location}</div>\r\n                <div className=\"text-primary\">{user.bio}</div>\r\n                <div className=\"text-info\">Available for hire{user.hireable ? 'YES' : 'NOPE'}</div>\r\n                <div className=\"text-info\">Followers: {user.followers}</div>\r\n                <div className=\"text-info\">Blog: {user.blog}</div>\r\n\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserCard\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\nconst Repos = ({ repos_url }) => {\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  const fetchRepos = async () => {\r\n    const { data } = await Axios.get(repos_url);\r\n    setRepos(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRepos();\r\n  }, [repos_url]);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {repos.map((repo) => (\r\n        <ListGroupItem key={repo.id}>\r\n          <div className=\"text-primary\">{repo.name}</div>\r\n          <div className=\"text-secondary\">{repo.language}</div>\r\n          <div className=\"text-info\">{repo.description}</div>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import {createContext} from \"react\"\r\n\r\nexport const UserContext = createContext()","import React, { useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\n\r\nimport UseCard from \"../components/UserCard\";\r\nimport Repos from \"../components/Repos\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/Usercontext\";\r\nimport { toast } from \"react-toastify\";\r\nimport UserCard from \"../components/UserCard\";\r\n\r\nconst Home = () => {\r\n  const context = useContext(UserContext);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  const fetchDetails = async () => {\r\n    try {\r\n      const { data } = await Axios.get(`https://api.github.com/users/${query}`);\r\n      setUser(data);\r\n      console.log({ data });\r\n    } catch (error) {\r\n      toast(\"Not able to locate user\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Put page behind login\r\n  if(!context.user?.uid)\r\n {\r\n   return <Redirect to='/signin' />\r\n }\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-3\">\r\n        <Col md=\"5\">\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Please Provide the username\"\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button onClick={fetchDetails} color=\"primary\">\r\n                Fetch User\r\n              </Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n          {user ? <UserCard user={user} /> : null}\r\n        </Col>\r\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url} /> : null}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from \"../context/Usercontext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast(error.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">SignIn here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"Your password here\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"primary\">\r\n                  Sign In\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from \"../context/Usercontext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast(error.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">SignUp here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"Your password here\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"primary\">\r\n                  Sign Up\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from 'react'\r\nimport {Container} from \"reactstrap\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container\r\n        fluid\r\n        tag=\"footer\"\r\n        className=\"text-center bg-info text-white text-uppercase fixed-bottom p-3\"\r\n        >\r\n            Manas' Github Search App using github API\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"../context/Usercontext\";\r\n\r\nconst Header = () => {\r\n  const context = useContext(UserContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar color=\"info\" light expand=\"md\">\r\n      <NavbarBrand>\r\n        <Link to=\"/\" className=\"text-light\">\r\n          Akoyas\r\n        </Link>\r\n      </NavbarBrand>\r\n      <NavbarText className=\"text-white\">\r\n        {context.user?.email ? context.user.email : \"\"}\r\n      </NavbarText>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          {context.user ? (\r\n            <NavItem>\r\n              <NavLink onClick={() => {context.setUser(null)}} className=\"text-white\">\r\n                Logout\r\n              </NavLink>\r\n            </NavItem>\r\n          ) : (\r\n            <>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/signup\" className=\"text-white\">\r\n                  SignUp\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/signin\" className=\"text-white\">\r\n                  SignIn\r\n                </NavLink>\r\n              </NavItem>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// react-router\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// toast\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n//components\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport { UserContext } from \"./context/Usercontext\";\n\nimport Footer from \"./layouts/Footer\";\nimport Header from \"./layouts/Header\";\n\nimport firebaseconfig from \"./config/firebaseconfig\";\n// init firebase\nfirebase.initializeApp(firebaseconfig);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"*\" component={PageNotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export default {\r\n    apiKey: \"AIzaSyA1dvQ3NXSKK4F5c3ewW36OcI2Znc-8hzc\",\r\n    authDomain: \"mygitapp-d8b8a.firebaseapp.com\",\r\n    databaseURL: \"https://mygitapp-d8b8a.firebaseio.com\",\r\n    projectId: \"mygitapp-d8b8a\",\r\n    storageBucket: \"mygitapp-d8b8a.appspot.com\",\r\n    messagingSenderId: \"537010067329\",\r\n    appId: \"1:537010067329:web:15bab31bb665552906ba80\"\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}